modifier (제어자)
    = 클래스, 변수, 메소드의 선언부에 함께 사용
    - 접근제어자
        - public, protected, default(:아무 제어자도 안붙이는 경우), private
        - 클래스, 멤버변수, 메소드, 생성자에 사용 (TODO: 클래스 앞에 private 는 똥같은소리)
            - public: 접근제한이 없음
            - protected: 같은 패키지 내에서, 다른 패키지의 자손클래스에서 접근 가능
            - default: 같은 패키지 내
            - private: 같은 클래스 내
            (유효범위 내림차순) public > protected > default > private
            
    - 그 외
        - static, final, abstract,...
            - static : 멤버변수, 메소드, import 구문에 사용
                멤버변수, 메소드 : 클래스이름.멤버변수 / 클래스이름.메소드() => 공유
                static import : 특정 클래스의 static 멤버 사용할 때 클래스 이름을 붙이지 않고 사용가능
            - final : 마지막의, 변경될 수 없는
                클래스, 메소드, 멤버변수, 지역변수 에 사용
                final class = 상속 불가
                final 멤버변수/지역변수 = 값 변경 불가 (==상수)
                final 메소드 = @Override 금지됨

- 상수 선언
final static int MAX  = 10; //TODO: 공유형 상수
static final int MAX = 10;