2024-08-26
클래스 : 객체를 정의해 놓은 것(설계도)

객체: 사물 또는 개념(제품)
1) 유형의 객체 - 자동차, 학생, TV...
2) 무형의 객체 - 수학공식, 

인스턴스(== 객체) : 클래스로부터 만들어진 객체

객체 구성요소
- 속성 properties : 멤버변수(!= 지역변수), 특성, 필드, 상태
- 기능 function : 메서드, 함수, 행위

인스턴스의 생성과 사용
1) 클래스 객체를 참조하기 위한 참조 변수를 선언
    Tv tv;

2) 객체를 생성 후 객체의 주소를 참조변수에 저장
    v = new Tv();

3) 사용
    tv.멤버변수 / tv.메소드명()

메서드: 특정 작업을 수행하는 일련이 문장들을 하나로 묶은 것
    - 필요한 값만 넣고 원하는 결과를 알아내면 됨
    Ex) Math.random() 과 같이 사용법만 알면 됨
    - 사용하는 이유: 
        1) 재사용성 : 한 번 만들어 놓고 다른 곳에서도 사용 가능
        2) 코드 간결성 : 중복된 코드 제거
        3) 프로그램 구조화 : (프로그램 코드 단순화)
    - 메소드 선언 : 
    반환타입 메소드명(타입 변수명, 타입 변수명, ...){
        메소드 호출 시 수행될 코드 ...
    }
    매개변수(parameter) => 지역변수 : 타입 변수명, 타입 변수명, ... 
    return : 하나만 리턴 가능
        - 반환타입과 일치 또는 자동 형변환이 가능해야 함

TODO: 오버로딩 : 단, 매개변수의 개수 또는 타입이 달라야 함
1. 생성자 오버로딩 : 하나의 클래스에 동일한 이름의 생성자가 존재
2. 메소드 오버로딩 : 하나의 클래스에 동일한 이름의 메소드가 존재

변수
1) 선언 위치에 따른 변수의 종류 (선언 위치에 따른 생성시기가 다름)
    - 지역 변수, 멤버 변수(인스턴스변수), 클래스 변수

class A{
    int iv; //TODO: 인스턴스 변수
    static int cv; //TODO: 클래스 변수 (static)

    void method(){
        int lv = 0; //TODO: 로컬 변수
    }
}

2) 선언위치에 생성 시기가 다름
    - 클래스 변수 : 클래스가 메모리에 올라갈 때
    - 인스턴스 변수 : 인스턴스가 생성되었을 때
    - 로컬 변수 : 변수 선언문이 수행되었을 때

메소드
    - static 메소드 : 클래스가 메모리에 올라갈 때 생성됨
    - non static 메소드 : 인스턴스가 생성될 때 생성됨

메소드 작성 시 매개변수 처리
    -TODO: 매개변수 기본타입으로 사용하는 경우 : 값만 복사 됨
        : 기본타입 (정수, 실수, 논리, 문자형)
    -TODO: 매개변수 참조타입으로 사용 : 주소 복사 됨(원본 변화)
        : 대문자로 시작하면 참조타입(String, Data, Student, 배열)
